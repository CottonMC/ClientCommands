plugins {
    id 'fabric-loom' version '0.2.4-SNAPSHOT'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.9.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = 'cotton-client-commands'
version = project.mod_version + (project.snapshot ? '-SNAPSHOT' : '')
group = project.maven_group

minecraft {
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

if (file('private.gradle').exists()) {
    apply from: 'private.gradle'
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            
            // add all the jars that should be included when publishing to maven
            artifact(jar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

artifactory {
    if (project.hasProperty("artifactoryUsername")) {
        contextUrl = 'http://server.bbkr.space:8081/artifactory/'
        publish {
            repository {
                if (version.contains("SNAPSHOT")) {
                    repoKey = "libs-snapshot"
                } else {
                    repoKey = "libs-release"
                }
                username = artifactoryUsername
                password = artifactoryPassword
            }
            defaults {
                publications('mavenJava')

                publishArtifacts = true
                publishPom = true
            }
        }
    } else {
        println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
    }
}
